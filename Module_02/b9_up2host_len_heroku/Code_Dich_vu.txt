
DV_DU_LIEU.js
frame var port =1000; cua DVDL
var Port = normalizePort(process.env.PORT || 1000);

set 4 quyền này sau Yeu_cau.on('end',()=>{

Dap_ung.setHeader("Access-Control-Allow-Origin", '*')
Dap_ung.setHeader('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');
Dap_ung.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, content-type');
Dap_ung.setHeader('Access-Control-Allow-Credentials', true);

bỏ sau cái Chuoi_Kq trong DVDL
Dap_ung.end(Chuoi_Kq);


Dich_vu.listen(Port,
  console.log(`Dịch vụ Dữ liệu đang thực thi tại địa chỉ: http://localhost:${Port}`)
);
chép sau thằng listen
Dich_vu.on('error', onError);
Dich_vu.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        // named pipe
        return val;
    }

    if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof Port === 'string'
        ? 'Pipe ' + Port
        : 'Port ' + Port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    var addr = Dich_vu.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    console.log('Listening on ' + bind);
}



----------------------------------------------------------------------------------------------------

package.json

"scripts": {
"start": "node ./Dich_vu/DV_DU_LIEU.js"}
------------------------------------------------------ 

heroku git:clone -a APP-NAME

